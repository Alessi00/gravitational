---
kind: pipeline
type: kubernetes
name: test-and-build

trigger:
  event:
    include:
      - push
      - pull_request

workspace:
  path: /tmp

clone:
  disable: true

steps:
  - name: Check out code
    image: docker:git
    environment:
      GITHUB_PRIVATE_KEY:
        from_secret: GITHUB_PRIVATE_KEY
    commands:
      - mkdir -p /tmp/webassets
      - cd /tmp/webassets
      - git init && git remote add origin ${DRONE_REMOTE_URL}
      - |
        # handle pull requests
        if [ "${DRONE_BUILD_EVENT}" = "pull_request" ]; then
          git fetch origin +refs/heads/${DRONE_COMMIT_BRANCH}:
          git checkout ${DRONE_COMMIT_BRANCH}
          git fetch origin ${DRONE_COMMIT_REF}:
          git merge ${DRONE_COMMIT}
        # handle tags
        elif [ "${DRONE_BUILD_EVENT}" = "tag" ]; then
          git fetch origin +refs/tags/${DRONE_TAG}:
          git checkout -qf FETCH_HEAD
        # handle pushes/other events
        else
          if [ "${DRONE_COMMIT_BRANCH}" = "" ]; then
            git fetch origin
            git checkout -qf ${DRONE_COMMIT_SHA}
          else
            git fetch origin +refs/heads/${DRONE_COMMIT_BRANCH}:
            git checkout ${DRONE_COMMIT} -b ${DRONE_COMMIT_BRANCH}
          fi
        fi
      # run tests
      - make clean test
      # build artifacts
      - make build

  # - name: Send Slack notification for build failures
  #   image: plugins/slack
  #   settings:
  #     webhook:
  #       from_secret: SLACK_WEBHOOK
  #     channel: teleport-builds
  #     template: |
  #       {{#if build.pull }}
  #         *{{#success build.status}}✔{{ else }}✘{{/success}} {{ uppercasefirst build.status }}*: <https://github.com/{{ repo.owner }}/{{ repo.name }}/pull/{{ build.pull }}|Pull Request #{{ build.pull }}>
  #       {{else}}
  #         *{{#success build.status}}✔{{ else }}✘{{/success}} {{ uppercasefirst build.status }}: Build #{{ build.number }}* (type: `{{ build.event }}`)
  #       {{/if}}
  #       Commit: <https://github.com/{{ repo.owner }}/{{ repo.name }}/commit/{{ build.commit }}|{{ truncate build.commit 8 }}>
  #       Branch: <https://github.com/{{ repo.owner }}/{{ repo.name }}/commits/{{ build.branch }}|{{ build.branch }}>
  #       Author: {{ build.author }}
  #       <{{ build.link }}|Visit build page ↗>
  #   when:
  #     event: [push]
  #     status: [failure]

services:
  - name: Start Docker
    image: docker:dind
    privileged: true
    volumes:
      - name: dockersock
        path: /var/run

volumes:
  - name: dockersock
    temp: {}

---
kind: signature
hmac: 4b5226e038fd0d26ec37d5378c157b1da738c6a4682cd49a9e0cc995262da4be

...
