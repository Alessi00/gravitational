---
kind: pipeline
type: kubernetes
name: test-and-build

trigger:
  event:
    include:
      - pull_request

workspace:
  path: /tmp

clone:
  disable: true

steps:
  - name: Check out code
    image: docker:git
    environment:
      GITHUB_PRIVATE_KEY:
        from_secret: GITHUB_PRIVATE_KEY
    commands:
      - mkdir -p /tmp/webassets
      - cd /tmp/webassets
      - git init && git remote add origin ${DRONE_REMOTE_URL}
      - |
        # handle pull requests
        if [ "${DRONE_BUILD_EVENT}" = "pull_request" ]; then
          git fetch origin +refs/heads/${DRONE_COMMIT_BRANCH}:
          git checkout ${DRONE_COMMIT_BRANCH}
          git fetch origin ${DRONE_COMMIT_REF}:
          git merge ${DRONE_COMMIT}
        # handle tags
        elif [ "${DRONE_BUILD_EVENT}" = "tag" ]; then
          git fetch origin +refs/tags/${DRONE_TAG}:
          git checkout -qf FETCH_HEAD
        # handle pushes/other events
        else
          if [ "${DRONE_COMMIT_BRANCH}" = "" ]; then
            git fetch origin
            git checkout -qf ${DRONE_COMMIT_SHA}
          else
            git fetch origin +refs/heads/${DRONE_COMMIT_BRANCH}:
            git checkout ${DRONE_COMMIT} -b ${DRONE_COMMIT_BRANCH}
          fi
        fi

  - name: Run tests
    image: docker:git
    volumes:
      - name: dockersock
        path: /var/run
    commands:
      # install make
      - apk add --no-cache make
      # run tests
      - make clean test

  - name: Build artifacts
    image: docker:git
    volumes:
      - name: dockersock
        path: /var/run
    commands:
      # install make
      - apk add --no-cache make
      # build artifacts
      - make build

services:
  - name: Start Docker
    image: docker:dind
    privileged: true
    volumes:
      - name: dockersock
        path: /var/run

volumes:
  - name: dockersock
    temp: {}

---
kind: signature
hmac: 44e1c218a04ebb9c85d984e5d817e0f9a975e056a19d825c705e4d707b8641ac

...
